name: CI

on:
  push:
  pull_request:

env: 
  CARGO_TERM_COLOR: always

jobs:
  build_and_test:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      - uses: actions/setup-python@v5
        with:
            python-version: '3.13'
      # Run pre-commit checks.
      - uses: pre-commit/action@v3.0.1
      - name: Install rust toolchain
        run: rustup update stable && rustup default stable
      - name: Install build dependencies
        run: |
          sudo apt-get update && sudo apt-get upgrade -y \
          && sudo apt-get install -y build-essential python3-dev automake cmake git flex bison \
            libglib2.0-dev libpixman-1-dev python3-setuptools libgtk-3-dev lld llvm llvm-dev \
            clang ninja-build cpio libcapstone-dev wget curl python3-pip \
          && sudo apt-get install -y \
            gcc-$(gcc --version|head -n1|sed 's/\..*//'|sed 's/.* //')-plugin-dev \
            libstdc++-$(gcc --version|head -n1|sed 's/\..*//'|sed 's/.* //')-dev
      - name: Build ROSA
        run: cargo build --verbose
      - name: Test ROSA
        run: cargo test --verbose
      - name: Format ROSA
        run: cargo fmt --verbose
      - name: Run clippy on ROSA
        run: cargo clippy --verbose
      - name: Build AFL++ with patches
        run: |
          patch --directory=./fuzzers/aflpp/aflpp/qemu_mode/qemuafl -p1 \
            < ./fuzzers/aflpp/patches/qemuafl-rosa.patch \
          && patch --directory=./fuzzers/aflpp/aflpp -p1 \
            < ./fuzzers/aflpp/patches/aflpp-rosa.patch \
          && patch --directory=./fuzzers/aflpp/aflpp -p1 \
            < ./fuzzers/aflpp/patches/aflpp-qemuafl-build.patch \
          && make --directory=./fuzzers/aflpp/aflpp -j$(nproc) \
          && cd ./fuzzers/aflpp/aflpp/qemu_mode && ./build_qemu_support.sh
